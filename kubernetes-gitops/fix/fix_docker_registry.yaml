
# Создаем Namespace
---
apiVersion: v1
kind: Namespace
metadata:
  name: docker-mirror

# Создаем объект ConfigMap конфига config.toml для containerd
# В секции [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
# определяем зеркала. Список endpoint можно пополнять
---
apiVersion: v1
data:
  config.toml: |
    oom_score = -999
    version = 2

    [debug]
      level = "info"

    [plugins]
      [plugins."io.containerd.grpc.v1.cri".cni]
          bin_dir = "/home/kubernetes/cni/bin"
          conf_dir = "/etc/cni/net.d"

      [plugins."io.containerd.runtime.v1.linux"]
          runtime = "/home/kubernetes/bin/runc"
          shim = "/home/kubernetes/bin/containerd-shim"

      [plugins."io.containerd.grpc.v1.cri"]
          stream_server_address = "127.0.0.1"
          enable_tls_streaming = false
          sandbox_image = "cr.yandex/crpsjg1coh47p81vh2lc/pause:3.9"
          [plugins."io.containerd.grpc.v1.cri".containerd]
              snapshotter = "overlayfs"

      [plugins."io.containerd.grpc.v1.cri".registry]
        [plugins."io.containerd.grpc.v1.cri".registry.mirrors]
          [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
            endpoint = ["https://cr.yandex/v2/mirror/io/docker","https://mirror.gcr.io"]
kind: ConfigMap
metadata:
  name: configtoml
  namespace: docker-mirror

# Ниже – манифест DaemonSet для запуска привилегированных подов, каждый из которых копирует config.toml
# В etc/containerd/config.toml на каждой и однократно перезапускает containerd.
# Добавили секцию, чтобы DaemonSet смог запускаться на нодах с taint. 
---
apiVersion: "apps/v1"
kind: DaemonSet
metadata:
  name: docker-mirror
  namespace: docker-mirror
  labels:
    app: docker-mirror
    version: 1v
spec:
  selector:
    matchLabels:
      app: docker-mirror
  template:
    metadata:
      labels:
        app: docker-mirror
    spec:
      schedulerName: default-scheduler
      priorityClassName: system-node-critical
      hostPID: true
      hostIPC: true
      containers:
      - name: config-updater
        image: cr.yandex/yc/mk8s-openssl:stable
        command:
          - sh
          - -c
          - |
             cp /tmp/config.toml /host/etc/containerd/config.toml &&
             ps -x -o pid= -o comm= | awk '$2 ~ "^(containerd|dockerd)$" { print $1 }' | xargs kill
             sleep infinity
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: containerd-config
          mountPath: /host/etc/containerd
        - name: config
          mountPath: /tmp
      volumes:
      - name: containerd-config
        hostPath:
          path: /etc/containerd
      - name: config
        configMap:
          name: configtoml
